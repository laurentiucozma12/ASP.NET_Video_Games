// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VideoGameModel.Data;

#nullable disable

namespace VideoGameModel.Migrations
{
    [DbContext(typeof(VideoGameContext))]
    [Migration("20240119231712_NewUpdate")]
    partial class NewUpdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VideoGameModel.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("VideoGameModel.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres", (string)null);
                });

            modelBuilder.Entity("VideoGameModel.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VideoGameId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("VideoGameId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("VideoGameModel.Models.Platform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Platforms", (string)null);
                });

            modelBuilder.Entity("VideoGameModel.Models.PublishedVideoGame", b =>
                {
                    b.Property<int>("VideoGameId")
                        .HasColumnType("int");

                    b.Property<int>("StudioId")
                        .HasColumnType("int");

                    b.HasKey("VideoGameId", "StudioId");

                    b.HasIndex("StudioId");

                    b.ToTable("PublishedVideoGames", (string)null);
                });

            modelBuilder.Entity("VideoGameModel.Models.Studio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Studios", (string)null);
                });

            modelBuilder.Entity("VideoGameModel.Models.VideoGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("GenreId")
                        .HasColumnType("int");

                    b.Property<int?>("PlatformId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<int?>("StudioId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.HasIndex("PlatformId");

                    b.HasIndex("StudioId");

                    b.ToTable("VideoGames", (string)null);
                });

            modelBuilder.Entity("VideoGameModel.Models.Order", b =>
                {
                    b.HasOne("VideoGameModel.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VideoGameModel.Models.VideoGame", "VideoGame")
                        .WithMany("Orders")
                        .HasForeignKey("VideoGameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("VideoGame");
                });

            modelBuilder.Entity("VideoGameModel.Models.PublishedVideoGame", b =>
                {
                    b.HasOne("VideoGameModel.Models.Studio", "Studio")
                        .WithMany()
                        .HasForeignKey("StudioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VideoGameModel.Models.VideoGame", "VideoGame")
                        .WithMany("PublishedVideoGames")
                        .HasForeignKey("VideoGameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Studio");

                    b.Navigation("VideoGame");
                });

            modelBuilder.Entity("VideoGameModel.Models.VideoGame", b =>
                {
                    b.HasOne("VideoGameModel.Models.Genre", "Genre")
                        .WithMany("VideoGames")
                        .HasForeignKey("GenreId");

                    b.HasOne("VideoGameModel.Models.Platform", "Platform")
                        .WithMany("VideoGames")
                        .HasForeignKey("PlatformId");

                    b.HasOne("VideoGameModel.Models.Studio", "Studio")
                        .WithMany("VideoGames")
                        .HasForeignKey("StudioId");

                    b.Navigation("Genre");

                    b.Navigation("Platform");

                    b.Navigation("Studio");
                });

            modelBuilder.Entity("VideoGameModel.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("VideoGameModel.Models.Genre", b =>
                {
                    b.Navigation("VideoGames");
                });

            modelBuilder.Entity("VideoGameModel.Models.Platform", b =>
                {
                    b.Navigation("VideoGames");
                });

            modelBuilder.Entity("VideoGameModel.Models.Studio", b =>
                {
                    b.Navigation("VideoGames");
                });

            modelBuilder.Entity("VideoGameModel.Models.VideoGame", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("PublishedVideoGames");
                });
#pragma warning restore 612, 618
        }
    }
}
